{"version":3,"file":"static/js/220.029e9a3f.chunk.js","mappings":"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","sources":["shared/hooks/http-hook.js","user/pages/Auth.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    console.log(formState.inputs);\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className='authentication'>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element='input'\n              id='name'\n              type='text'\n              label='Your Name'\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Please enter a name.'\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id='image'\n              onInput={inputHandler}\n              errorText='Please provide an image.'\n            />\n          )}\n          <Input\n            element='input'\n            id='email'\n            type='email'\n            label='E-Mail'\n            validators={[VALIDATOR_EMAIL()]}\n            errorText='Please enter a valid email address.'\n            onInput={inputHandler}\n          />\n          <Input\n            element='input'\n            id='password'\n            type='password'\n            label='Password'\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText='Please enter a valid password, at least 6 characters.'\n            onInput={inputHandler}\n          />\n          <Button type='submit' disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className='form-control'>\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type='file'\n        accept='.jpg,.png,.jpeg'\n        onChange={pickHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className='image-upload__preview'>\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type='button' onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div\n      ref={props.ref}\n      className={`modal ${props.className}`}\n      style={props.style}\n    >\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = (props) => {\n  const transitionRef = React.useRef(null);\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        nodeRef={transitionRef}\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames='modal'\n      >\n        <ModalOverlay ref={transitionRef} {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","useForm","email","value","isValid","password","_jsxs","React","children","_jsx","ErrorModal","onClear","Card","className","LoadingSpinner","asOverlay","onSubmit","event","preventDefault","console","log","inputs","JSON","stringify","login","userId","token","formData","FormData","append","name","image","Input","element","id","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","ImageUpload","center","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","Button","disabled","inverse","onClick","switchModeHandler","prevMode","inputReducer","state","action","val","validate","isTouched","props","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","href","size","danger","to","Link","exact","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","src","alt","pickImageHandler","click","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","transitionRef","Backdrop","CSSTransition","nodeRef","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","validator","trim","test"],"sourceRoot":""}