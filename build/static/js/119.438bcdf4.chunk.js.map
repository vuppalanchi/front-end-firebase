{"version":3,"file":"static/js/119.438bcdf4.chunk.js","mappings":"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","sources":["shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/hooks/http-hook.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n  return (\n    <li className='user-item'>\n      <Card className='user-item__content'>\n        <Link to={`/${props.id}/places`}>\n          <div className='user-item__image'>\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image.replace(\n                /\\\\/g,\n                '/'\n              )}`}\n              alt={props.name}\n            />\n          </div>\n          <div className='user-item__info'>\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className='center'>\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className='users-list'>\n      {props.items.map((user) => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users`\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className='center'>\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","import { useCallback, useState, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div\n      ref={props.ref}\n      className={`modal ${props.className}`}\n      style={props.style}\n    >\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = (props) => {\n  const transitionRef = React.useRef(null);\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        nodeRef={transitionRef}\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames='modal'\n      >\n        <ModalOverlay ref={transitionRef} {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","_jsx","className","style","children","src","image","alt","width","height","Card","_jsxs","Link","to","id","Avatar","replace","name","placeCount","items","length","map","user","UserItem","places","Users","isLoading","error","sendRequest","clearError","useHttpClient","loadedUsers","setLoadedUsers","useState","useEffect","async","responseData","users","err","fetchUsers","React","ErrorModal","onClear","LoadingSpinner","UsersList","setIsLoading","setError","activeHttpRequests","useRef","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","href","size","inverse","danger","exact","type","onClick","disabled","Modal","onCancel","header","show","footer","Button","ModalOverlay","content","ref","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","transitionRef","Backdrop","CSSTransition","nodeRef","in","mountOnEnter","unmountOnExit","timeout","classNames"],"sourceRoot":""}