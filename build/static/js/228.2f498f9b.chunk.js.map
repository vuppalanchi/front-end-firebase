{"version":3,"file":"static/js/228.2f498f9b.chunk.js","mappings":"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","sources":["shared/hooks/http-hook.js","contactus/components/ContactItem.js","contactus/components/ContactsList.js","contactus/pages/Contacts.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './ContactItem.css';\n\nconst ContactItem = (props) => {\n  return (\n    <li className='contact-item'>\n      <Card className='contact-item__content'>\n        <Link to={`/${props.id}/places`}>\n          <div className='contact-item__info'>\n            <h2>{props.name}</h2>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\n\nimport ContactItem from './ContactItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './ContactsList.css';\n\nconst ContactsList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className='center'>\n        <Card>\n          <h2>No contacts found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className='contacts-list'>\n      {props.items.map((contacts) => (\n        <ContactItem\n          //key={user.id}\n          //id={user.id}\n          //image={user.image}\n          name={contacts.name}\n          //placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import React, { useEffect, useState } from 'react';\n\nimport ContactsList from '../components/ContactsList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Contacts =() => {\n\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\nconst [loadedContacts, setLoadedContacts] = useState();\n\nuseEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/contacts/getAllContacts`\n        );\n\n        setLoadedContacts(responseData.contacts);\n      } catch (err) {}\n    };\n\n    fetchContacts();\n  }, [sendRequest]);\n\n/*\nconst loadedContacts = [{\"name\":\"Upender\"},\n                        {\"name\":\"Keerthi\"},\n                        {\"name\":\"Thrishika\"},\n                        {\"name\":\"Siwapriyaa\"},\n                       ];\n*/\n                       \n\n   // return (<h1>\n   //     <div>Contact 1 </div>\n   //     <div>Contact 2 </div>\n\n   // </h1>\n   // )\n\n\n    return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className='center'>\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedContacts && <ContactsList items={loadedContacts} />}\n        </React.Fragment>\n      );\n    \n\n\n    \n};\n\nexport default Contacts;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div\n      ref={props.ref}\n      className={`modal ${props.className}`}\n      style={props.style}\n    >\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = (props) => {\n  const transitionRef = React.useRef(null);\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        nodeRef={transitionRef}\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames='modal'\n      >\n        <ModalOverlay ref={transitionRef} {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n"],"names":["useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","props","_jsx","className","children","Card","Link","to","id","name","items","map","contacts","ContactItem","Contacts","loadedContacts","setLoadedContacts","fetchContacts","_jsxs","React","ErrorModal","onClear","LoadingSpinner","ContactsList","href","size","inverse","danger","exact","type","onClick","disabled","Modal","onCancel","header","show","footer","Button","ModalOverlay","content","ref","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","transitionRef","Backdrop","CSSTransition","nodeRef","in","mountOnEnter","unmountOnExit","timeout","classNames","src","image","alt","width","height"],"sourceRoot":""}